package UtilityForms;

import Classes.Bill;
import Classes.BillOrder;
import Classes.Meal;
import static Utilities.IntergratedProjectStaffApplication.mainInterface;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class BillSplit extends javax.swing.JFrame {


    DefaultListModel order1Model = new DefaultListModel();
    DefaultListModel order2Model = new DefaultListModel();
    Double total1 = 0.0;
    Double total2 = 0.0;
    ArrayList<BillOrder> order1 = new ArrayList<>();
    ArrayList<BillOrder> order2 = new ArrayList<>();
    
    public BillSplit() {
        initComponents();
        setupForm();
        setEventListeners();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstOrder1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOrder2 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTotal1 = new javax.swing.JLabel();
        lblTotal2 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnCard = new javax.swing.JButton();
        btnCash = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Bill 1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Bill 2");

        lstOrder1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstOrder1);

        lstOrder2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstOrder2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Total :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Total :");

        lblTotal1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotal1.setText("0.00");

        lblTotal2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotal2.setText("0.00");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCard.setText("Card");
        btnCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCardActionPerformed(evt);
            }
        });

        btnCash.setText("Cash");
        btnCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblTotal1)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(lblTotal2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnCash, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCard, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnClose))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(lblTotal1)
                    .addComponent(lblTotal2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCard, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCash, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashActionPerformed
        int tableNo = Utilities.IntergratedProjectStaffApplication.mainInterface.currentBill.getTableNo();
        
        Bill bill = new Bill(order2.size(), total2, tableNo, 0, total2, 0 );
        processSplit(bill);
    }//GEN-LAST:event_btnCashActionPerformed

    private void btnCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCardActionPerformed
        int tableNo = Utilities.IntergratedProjectStaffApplication.mainInterface.currentBill.getTableNo();
        
        Bill bill = new Bill(order2.size(), total2, tableNo, 0, 0, total2 );
        processSplit(bill);
    }//GEN-LAST:event_btnCardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillSplit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillSplit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillSplit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillSplit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillSplit().setVisible(true);
            }
        });
    }
    
    public void setupForm() {
        for (BillOrder order : Utilities.IntergratedProjectStaffApplication.mainInterface.currentBill.getBillOrders()) {
            order1.add(order);
        }
        
        lstOrder1.setModel(order1Model);
        lstOrder2.setModel(order2Model);
        
        for (BillOrder order : order1) {
            for (Meal meal : Utilities.IntergratedProjectStaffApplication.mainInterface.allMeals) {
                if (meal.getMealID() == order.getMealID()) {
                    order1Model.addElement(meal.getName() + " " + meal.getPrice());
                    total1 += meal.getPrice();
                    break;
                }
            }
        }
        setLabels();
    }
    
    public void setEventListeners() {
        lstOrder1.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selected = lstOrder1.getSelectedIndex();
                if (selected != -1) {
                    for (Meal meal : Utilities.IntergratedProjectStaffApplication.mainInterface.allMeals) {
                        if (meal.getMealID() == order1.get(selected).getMealID()) {
                            total1 -= meal.getPrice();
                            total2 += meal.getPrice();
                        }
                    }
                    setLabels();
                    order2Model.addElement(order1Model.get(selected));
                    order1Model.remove(selected);
                    order2.add(order1.get(selected));
                    order1.remove(selected);
                }
            }
        });
        lstOrder2.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selected = lstOrder2.getSelectedIndex();
                if (selected != -1) {
                    for (Meal meal : Utilities.IntergratedProjectStaffApplication.mainInterface.allMeals) {
                        if (meal.getMealID() == order2.get(selected).getMealID()) {
                            total2 -= meal.getPrice();
                            total1 += meal.getPrice();
                        }
                    }
                    setLabels();
                    order1Model.addElement(order2Model.get(selected));
                    order2Model.remove(selected);
                    order1.add(order2.get(selected));
                    order2.remove(selected);
                }
            }
        });
    }
    
    public void setLabels() {
        lblTotal1.setText(String.format("%.2f", total1));
        lblTotal2.setText(String.format("%.2f", total2));    
    }
    
    public void processSplit(Bill bill) {
        bill.setBillID(Utilities.IntergratedProjectStaffApplication.JSPConnector.addBillSplit(bill));
        bill.setBillOrders(order2);
                
        mainInterface.currentBill.setBillOrders(order1);
        mainInterface.currentBill.setNoOfItems(mainInterface.currentBill.getBillOrders().size());
        mainInterface.currentBill.setTotal(total1);
        Utilities.IntergratedProjectStaffApplication.JSPConnector.updateBill(mainInterface.currentBill);
        
        for (BillOrder order : bill.getBillOrders()) {
            order.setBillID(bill.getBillID());
            Utilities.IntergratedProjectStaffApplication.JSPConnector.addBillOrder(order);
            Utilities.IntergratedProjectStaffApplication.JSPConnector.deleteBillOrder(order);
        }
        mainInterface.orderModel.clear();
        if (!mainInterface.currentBill.getBillOrders().isEmpty()) {
                for (BillOrder billOrder : mainInterface.currentBill.getBillOrders()) {
                    String orderLine = "";
                    for (Meal meal : mainInterface.allMeals) {                    
                        if (meal.getMealID() == billOrder.getMealID()) {
                            orderLine = meal.getName() + " " + meal.getPrice();
                            break;
                        }
                    }
                    if (billOrder.getComplete() == 1)                
                        orderLine += " - Done";
                    mainInterface.orderModel.addElement(orderLine);
                }
            }        
        this.dispose();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCard;
    private javax.swing.JButton btnCash;
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTotal1;
    private javax.swing.JLabel lblTotal2;
    private javax.swing.JList<String> lstOrder1;
    private javax.swing.JList<String> lstOrder2;
    // End of variables declaration//GEN-END:variables
}
