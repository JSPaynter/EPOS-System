package MealForms;

import Classes.Ingredient;
import Classes.Meal;
import Classes.MealIngredient;
import Classes.MealType;
import Utilities.IntergratedProjectStaffApplication;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class ViewEditMeal extends javax.swing.JFrame {

    ArrayList<Meal> originalMeal = new ArrayList<>();
    ArrayList<Meal> searchedMeal = new ArrayList<>();
    ArrayList<Ingredient> ingredientList = new ArrayList<>();
    ArrayList<MealIngredient> newIngredients = new ArrayList<>();
    ArrayList<MealIngredient> deleteIngredients = new ArrayList<>();
    ArrayList<MealType> mealTypes = new ArrayList<>();
    DefaultListModel lstMealModel = new DefaultListModel();
    DefaultListModel lstIngredientModel = new DefaultListModel();
    Meal currentMeal;
    int currentSelectionMeal;
    int currentSelectionIngredient;
    int originalIngredientSize;
    boolean searchActivated = false;
    
    public ViewEditMeal() {
        initComponents();
        setupForm();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSearchPrice = new javax.swing.JTextField();
        txtSearchName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMeal = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        radPriceHigher = new javax.swing.JRadioButton();
        radPriceLower = new javax.swing.JRadioButton();
        radPriceExact = new javax.swing.JRadioButton();
        radSearchMenuBoth = new javax.swing.JRadioButton();
        radSearchMenuYes = new javax.swing.JRadioButton();
        radSearchMenuNo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        cboSearchMealType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboMealType = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        radMenuYes = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        radMenuNo = new javax.swing.JRadioButton();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstIngredient = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        btnAddIngredient = new javax.swing.JButton();
        btnRemoveIngredient = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnAddMeal = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearchMealType = new javax.swing.JToggleButton();

        jButton4.setText("Confirm");

        jButton6.setText("View Menu");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel18.setText("Price :");

        jLabel19.setText("On Menu :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Search Meals");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        lstMeal.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstMeal);

        jLabel17.setText("Name :");

        buttonGroup1.add(radPriceHigher);
        radPriceHigher.setText("Higher");

        buttonGroup1.add(radPriceLower);
        radPriceLower.setText("Lower");

        buttonGroup1.add(radPriceExact);
        radPriceExact.setSelected(true);
        radPriceExact.setText("Exact");

        buttonGroup2.add(radSearchMenuBoth);
        radSearchMenuBoth.setSelected(true);
        radSearchMenuBoth.setText("Both");

        buttonGroup2.add(radSearchMenuYes);
        radSearchMenuYes.setText("Yes");

        buttonGroup2.add(radSearchMenuNo);
        radSearchMenuNo.setText("No");

        jLabel1.setText("Meal Section :");

        jLabel2.setText("Name :");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane2.setViewportView(txtDescription);

        jLabel3.setText("Price (Â£) :");

        jLabel4.setText("Meal Section :");

        jLabel5.setText("Description :");

        buttonGroup3.add(radMenuYes);
        radMenuYes.setText("Yes");

        jLabel6.setText("On Menu :");

        buttonGroup3.add(radMenuNo);
        radMenuNo.setText("No");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Meal Details");

        jScrollPane3.setViewportView(lstIngredient);

        jLabel9.setText("Ingredient List");

        btnAddIngredient.setText("Add Item");
        btnAddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIngredientActionPerformed(evt);
            }
        });

        btnRemoveIngredient.setText("Remove Item");
        btnRemoveIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveIngredientActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnMenu.setText("View Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnAddMeal.setText("Add Meal");
        btnAddMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMealActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Meal");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearchMealType.setText("Search with Meal Section");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radPriceExact)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radPriceHigher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radPriceLower))
                            .addComponent(txtSearchName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radSearchMenuBoth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radSearchMenuYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radSearchMenuNo))
                            .addComponent(cboSearchMealType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchMealType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnDelete))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cboMealType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(radMenuYes)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(radMenuNo))))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnMenu)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddMeal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveIngredient)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(radSearchMenuBoth)
                            .addComponent(radSearchMenuYes)
                            .addComponent(radSearchMenuNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radPriceExact)
                            .addComponent(radPriceHigher)
                            .addComponent(radPriceLower)
                            .addComponent(jLabel1)
                            .addComponent(cboSearchMealType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnClose, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchMealType)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(cboMealType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radMenuNo)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(radMenuYes))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMealActionPerformed
        if (Utilities.IntergratedProjectStaffApplication.addMeal != null) {
            Utilities.IntergratedProjectStaffApplication.addMeal.dispose();
        }
        Utilities.IntergratedProjectStaffApplication.addMeal = new AddMeal();
        Utilities.IntergratedProjectStaffApplication.addMeal.setVisible(true);
    }//GEN-LAST:event_btnAddMealActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIngredientActionPerformed
        if (Utilities.IntergratedProjectStaffApplication.addIngredientMeal != null) {
            Utilities.IntergratedProjectStaffApplication.addIngredientMeal.dispose();
        }
        Utilities.IntergratedProjectStaffApplication.addIngredientMeal = new AddIngredientMeal(1);
        Utilities.IntergratedProjectStaffApplication.addIngredientMeal.setVisible(true);
    }//GEN-LAST:event_btnAddIngredientActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you wish to remove " + currentMeal.getName() ,"Remove Meal", JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){

            newIngredients.clear();
            deleteIngredients.clear();
            
            IntergratedProjectStaffApplication.JSPConnector.deleteMeal(currentMeal);
            
            originalMeal.remove(currentMeal);
            searchedMeal.remove(currentMeal);            
            
            searchActivated = true;
            lstMealModel.remove(currentSelectionMeal);            
            
            Utilities.Utilities.infoBox("Meal removed : " + currentMeal.getName(), "Produce Removed");

            
            if (!searchedMeal.isEmpty())
                lstMeal.setSelectedIndex(0);
            else {
                lstIngredientModel.clear();
                txtName.setText("");
                txtPrice.setText("");
                txtDescription.setText("");
                cboMealType.setSelectedIndex(0);
                radSearchMenuNo.setSelected(true);
                lstIngredientModel.clear();
            }
        }  
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRemoveIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveIngredientActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you wish to remove " + lstIngredientModel.get(currentSelectionIngredient) ,"Remove Ingredient", JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){        
            if (currentSelectionIngredient < originalIngredientSize) { //add it to the current delete list, and remove from list, descrease "array size"
                deleteIngredients.add(currentMeal.getMealIngredients().get(currentSelectionIngredient));
                originalIngredientSize =- 1;
            } else if (currentSelectionIngredient >= originalIngredientSize) {
                deleteIngredients.remove(currentSelectionIngredient - originalIngredientSize); //remove it from hte delete update list
            }
            lstIngredientModel.remove(currentSelectionIngredient);
        }
    }//GEN-LAST:event_btnRemoveIngredientActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        searchActivated = true;
        
        searchedMeal.clear();
        lstMealModel.clear();
        
        String name = txtSearchName.getText();
        Double price = 0.0;
        int priceRad = 0;
        if (!txtSearchPrice.getText().isEmpty())
            price = Double.parseDouble(txtSearchPrice.getText());
        if (radPriceExact.isSelected())
            priceRad = 0;
        else if (radPriceHigher.isSelected())
            priceRad = 1;
        else if (radPriceLower.isSelected())
            priceRad = 2;
        
        
        int mealType = mealTypes.get(cboSearchMealType.getSelectedIndex()).getMealTypeID();
        int menu = 2;
        if (radSearchMenuBoth.isSelected())
            menu = 2;
        else if (radSearchMenuYes.isSelected())
            menu = 1;
        else if (radSearchMenuNo.isEnabled())
            menu = 0;        
        
        for (Meal meal : originalMeal) {
            if ((name.isEmpty() || name.equalsIgnoreCase(meal.getName())) &&
                    (txtSearchPrice.getText().isEmpty() ||
                    (price == meal.getPrice() && priceRad == 0 ) ||
                    (price <= meal.getPrice() && priceRad == 1) ||
                    (price >= meal.getPrice() && priceRad == 2)) &&
                    (menu == 2 || menu == meal.getMenu()) &&
                    (!btnSearchMealType.isSelected() ||
                    (btnSearchMealType.isSelected() && mealType == meal.getMealTypeID()))) {
                
                searchedMeal.add(meal);
                searchActivated = true;
                lstMealModel.addElement(meal.getName());                    
            }
        }
        
        //display message for no results
        if (searchedMeal.isEmpty()) {
            for (Meal meal : originalMeal) {
                searchedMeal.add(meal);
                searchActivated = true;
                lstMealModel.addElement(meal.getName());
            }
            txtSearchName.setText("");
            txtSearchPrice.setText("");
            radPriceExact.setSelected(true);
            radSearchMenuBoth.setSelected(true);
            cboSearchMealType.setSelectedIndex(0);
            btnSearchMealType.setSelected(false);
            Utilities.Utilities.infoBox("No matching results - Resetting List", "Search results");
        } else
            lstMeal.setSelectedIndex(0);
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        boolean validation;        
        
        if (txtDescription.getText().isEmpty())
            Utilities.Utilities.infoBox("Description can not be empty", "Description");
        else if (lstIngredientModel.isEmpty())
            Utilities.Utilities.infoBox("Meal must contain at least one ingredient", "Ingredient list");
        else {
            validation = Utilities.Utilities.nullCheck(txtName, "Name", "Name") && Utilities.Utilities.alphbetic(txtName.getText(), "Name", "Name") &&
                        Utilities.Utilities.nullCheck(txtPrice, "Price", "Price") && Utilities.Utilities.numericDecimal(txtPrice.getText(), "Price", "Price") &&
                        !txtDescription.getText().isEmpty() && !lstIngredientModel.isEmpty();

            if (validation) {
                
                setCurrentMeal();
                lstMealModel.set(currentSelectionMeal, currentMeal.getName());
                Utilities.IntergratedProjectStaffApplication.JSPConnector.updateMeal(currentMeal);
                
                for (MealIngredient ingredient : newIngredients) {
                    Utilities.IntergratedProjectStaffApplication.JSPConnector.updateMealIngredient(ingredient);
                    currentMeal.getMealIngredients().add(ingredient);
                }
                for (MealIngredient ingredient : deleteIngredients) {
                    Utilities.IntergratedProjectStaffApplication.JSPConnector.deleteMealIngredient(ingredient);
                    currentMeal.getMealIngredients().remove(ingredient);
                }
                
                newIngredients.clear();
                deleteIngredients.clear();
                Utilities.Utilities.infoBox("Meal Updated : " + currentMeal.getName(), "Meal Updated");
                
            }
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        if (Utilities.IntergratedProjectStaffApplication.viewMenu != null) {
            Utilities.IntergratedProjectStaffApplication.viewMenu.dispose();
        }
        Utilities.IntergratedProjectStaffApplication.viewMenu = new ViewMenu();
        Utilities.IntergratedProjectStaffApplication.viewMenu.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEditMeal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEditMeal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEditMeal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEditMeal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEditMeal().setVisible(true);
            }
        });
    }
    
    public void setupForm() {
        
        lstMeal.setModel(lstMealModel);
        lstIngredient.setModel(lstIngredientModel);
        
        originalMeal = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllMeal();        
        ArrayList<MealIngredient> mealIngredients = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllMealIngredients();
        ingredientList = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllIngredient();
        mealTypes = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllMealType();
        
        populateComboBox();
        
        for (MealIngredient ingredient : mealIngredients) {
            for (Meal meal : originalMeal) {
                if (ingredient.getMealID() == meal.getMealID()) {
                    meal.getMealIngredients().add(ingredient);
                    break;
                }
            }
        }
        
        for (Meal meal : originalMeal) {
            searchedMeal.add(meal);
            lstMealModel.addElement(meal.getName());
        }
        
        setEventListeners();
        if (!searchedMeal.isEmpty()) 
            lstMeal.setSelectedIndex(0);
    }
    
    public void setEventListeners() {
        lstMeal.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!searchActivated) //this check only allows the action to take place when manually changed,
                    setCurrentMealBoxs(); // not when the list repopulates calling the listener
                else
                    searchActivated = false;
                currentSelectionMeal = lstMeal.getSelectedIndex();
            }
        });
        
        lstIngredient.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                currentSelectionIngredient = lstIngredient.getSelectedIndex();
            }
        });
    }
    
    public void setCurrentMeal() {
        currentMeal.setName(txtName.getText());
        currentMeal.setPrice(Double.parseDouble(txtPrice.getText()));
        currentMeal.setDescription(txtDescription.getText());
        currentMeal.setMealTypeID(mealTypes.get(cboMealType.getSelectedIndex()).getMealTypeID());
        
        if (radMenuYes.isSelected())
            currentMeal.setMenu(1);
        else
            currentMeal.setMenu(0);        
    }
    
    public void setCurrentMealBoxs() {
        currentMeal = searchedMeal.get(lstMeal.getSelectedIndex());
        txtName.setText(currentMeal.getName());
        txtPrice.setText(String.valueOf(currentMeal.getPrice()));
        txtDescription.setText(currentMeal.getDescription());
                
        for (int i = 0; i < mealTypes.size(); i++) {
            if (mealTypes.get(i).getMealTypeID() == currentMeal.getMealTypeID()) {
                cboMealType.setSelectedIndex(i);
            }
        }
        
        switch (currentMeal.getMenu()) {
                case 0:
                    radMenuNo.setSelected(true);
                    break;
                case 1:
                    radMenuYes.setSelected(true);
                    break;
        }
        
        originalIngredientSize = currentMeal.getMealIngredients().size();
        newIngredients.clear();
        deleteIngredients.clear();
        lstIngredientModel.clear();
        
        for (MealIngredient mealIngredient : currentMeal.getMealIngredients()) {
            for (Ingredient ingredient: ingredientList) {
                if (mealIngredient.getIngredientID() == ingredient.getIngredientID())
                    lstIngredientModel.addElement(mealIngredient.getStockUsed() + " : "  +ingredient.getName());
                break;
            }
        }
        
    }
    
    public void populateComboBox() {        
        for (MealType mealType : mealTypes) {
            cboMealType.addItem(mealType.getMealType());
            cboSearchMealType.addItem(mealType.getMealType());            
        }        
    }
    
    public void addIngredient(MealIngredient ingredient, String name) {
        newIngredients.add(ingredient);
        lstIngredientModel.addElement(name);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddIngredient;
    private javax.swing.JButton btnAddMeal;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnRemoveIngredient;
    private javax.swing.JButton btnSearch;
    private javax.swing.JToggleButton btnSearchMealType;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cboMealType;
    private javax.swing.JComboBox<String> cboSearchMealType;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> lstIngredient;
    private javax.swing.JList<String> lstMeal;
    private javax.swing.JRadioButton radMenuNo;
    private javax.swing.JRadioButton radMenuYes;
    private javax.swing.JRadioButton radPriceExact;
    private javax.swing.JRadioButton radPriceHigher;
    private javax.swing.JRadioButton radPriceLower;
    private javax.swing.JRadioButton radSearchMenuBoth;
    private javax.swing.JRadioButton radSearchMenuNo;
    private javax.swing.JRadioButton radSearchMenuYes;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JTextField txtSearchPrice;
    // End of variables declaration//GEN-END:variables

}
