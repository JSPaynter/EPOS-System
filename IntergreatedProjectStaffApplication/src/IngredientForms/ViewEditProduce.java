package IngredientForms;

import Classes.Ingredient;
import Classes.MadeIngredient;
import Classes.MadeProduce;
import Utilities.IntergratedProjectStaffApplication;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class ViewEditProduce extends javax.swing.JFrame {


    ArrayList<MadeProduce> originalProduce = new ArrayList<>();
    ArrayList<MadeProduce> searchedProduce = new ArrayList<>();
    ArrayList<Ingredient> ingredientList = new ArrayList<>();
    ArrayList<MadeIngredient> newIngredients = new ArrayList<>();
    ArrayList<MadeIngredient> deleteIngredients = new ArrayList<>();
    DefaultListModel lstProduceModel = new DefaultListModel();
    DefaultListModel lstIngredientModel = new DefaultListModel();
    MadeProduce currentProduce;
    int currentSelectionProduce = 0;
    int currentSelectionIngredient = 0;
    int originalIngredientSize;
    boolean searchActivated = false;
    
    public ViewEditProduce() {
        initComponents();
        formSetup();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProduce = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        txtSearchName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstIngredients = new javax.swing.JList<>();
        btnAddIngredient = new javax.swing.JButton();
        btnRemoveIngredient = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstProduce.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstProduce);

        jLabel2.setText("Name :");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Produce");

        jLabel10.setText("Name :");

        btnClose.setText("Close");
        btnClose.setToolTipText("");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.setToolTipText("");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Produce");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Produce");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Produce Details");

        jLabel3.setText("Amount Made (g, ml) :");

        jLabel4.setText("Ingredients (g, ml) :");

        lstIngredients.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstIngredients);

        btnAddIngredient.setText("Add Ingredient");
        btnAddIngredient.setToolTipText("");
        btnAddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIngredientActionPerformed(evt);
            }
        });

        btnRemoveIngredient.setText("Remove Ingredient");
        btnRemoveIngredient.setToolTipText("");
        btnRemoveIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveIngredientActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.setToolTipText("");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAddIngredient)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRemoveIngredient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtName)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(303, 303, 303)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(7, 7, 7))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveIngredient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (Utilities.IntergratedProjectStaffApplication.addProduce != null) {
            Utilities.IntergratedProjectStaffApplication.addProduce.dispose();
        }
        Utilities.IntergratedProjectStaffApplication.addProduce = new AddProduce();
        Utilities.IntergratedProjectStaffApplication.addProduce.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
            
        searchActivated = true;
        
        searchedProduce.clear();
        lstProduceModel.clear();
        
        String name = txtSearchName.getText();
        for (MadeProduce produce : originalProduce) {                
            if (name.isEmpty() || name.equalsIgnoreCase(produce.getName())) {
                searchedProduce.add(produce);
                searchActivated = true;
                lstProduceModel.addElement(produce.getName());
            }
        }
        
        
        
        //display message for no results
        if (searchedProduce.isEmpty()) {
            for (MadeProduce produce : originalProduce) {
                searchedProduce.add(produce);
                searchActivated = true;
                lstProduceModel.addElement(produce.getName());
            }
            txtSearchName.setText("");
            Utilities.Utilities.infoBox("No matching results - Resetting List", "Search results");
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you wish to remove " + currentProduce.getName() ,"Remove Produce", JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){

            newIngredients.clear();
            deleteIngredients.clear();
            
            IntergratedProjectStaffApplication.JSPConnector.deleteProduce(currentProduce);
            
            originalProduce.remove(currentProduce);
            searchedProduce.remove(currentProduce);            
            
            searchActivated = true;
            lstProduceModel.remove(currentSelectionProduce);            
            
            Utilities.Utilities.infoBox("Produce removed : " + currentProduce.getName(), "Produce Removed");

            
            if (!searchedProduce.isEmpty())
                lstProduce.setSelectedIndex(0);
            else {
                lstIngredientModel.clear();
                txtName.setText("");
                txtAmount.setText("");
                lstIngredientModel.clear();
            }
        }        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIngredientActionPerformed
        if (Utilities.IntergratedProjectStaffApplication.addToProduce != null) {
            Utilities.IntergratedProjectStaffApplication.addToProduce.dispose();
        }
        Utilities.IntergratedProjectStaffApplication.addToProduce = new AddToProduce(1);
        Utilities.IntergratedProjectStaffApplication.addToProduce.setVisible(true);
    }//GEN-LAST:event_btnAddIngredientActionPerformed

    private void btnRemoveIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveIngredientActionPerformed
        if (currentSelectionIngredient != -1) {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you wish to remove " + lstIngredientModel.get(currentSelectionIngredient) ,"Remove Ingredient", JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){        
                if (currentSelectionIngredient <= originalIngredientSize) { //add it to the current delete list, and remove from list, descrease "array size"
                    deleteIngredients.add(currentProduce.getMadeIngredients().get(currentSelectionIngredient));
                    originalIngredientSize -= 1;
                } else if (currentSelectionIngredient > originalIngredientSize) {
                    deleteIngredients.remove(currentSelectionIngredient - originalIngredientSize); //remove it from the delete update list
                }
                lstIngredientModel.remove(currentSelectionIngredient);
            }
        }
    }//GEN-LAST:event_btnRemoveIngredientActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        boolean validation = false;
        
        if (lstIngredientModel.isEmpty())
            Utilities.Utilities.infoBox("Produce must contain at least one ingredient.", "Produce Ingredients");
        else {
            validation = Utilities.Utilities.nullCheck(txtName, "Name", "Name") && Utilities.Utilities.alphbetic(txtName.getText(), "Name", "Name") &&
                        Utilities.Utilities.nullCheck(txtAmount, "Amount", "Amount") && Utilities.Utilities.numericDecimal(txtAmount.getText(), "Amount", "Amount") &&
                        !lstIngredientModel.isEmpty();
        }
        
        if (validation) {
            
            setCurrentProduce();
            lstProduceModel.set(currentSelectionProduce, currentProduce.getName());
            Utilities.IntergratedProjectStaffApplication.JSPConnector.updateProduce(currentProduce);
            
            for (MadeIngredient ingredient : newIngredients) {
                Utilities.IntergratedProjectStaffApplication.JSPConnector.addMadeIngredient(ingredient);
                currentProduce.getMadeIngredients().add(ingredient);
            }
            for (MadeIngredient ingredient : deleteIngredients) {
                Utilities.IntergratedProjectStaffApplication.JSPConnector.deleteMadeIngredient(ingredient);
                currentProduce.getMadeIngredients().remove(ingredient);
            }
            
            newIngredients.clear();
            deleteIngredients.clear();            
            Utilities.Utilities.infoBox("Produce Updated : " + currentProduce.getName(), "Produce Updated");  
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEditProduce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEditProduce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEditProduce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEditProduce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEditProduce().setVisible(true);
            }
        });
    }
    
    public void formSetup() {
        
        lstProduce.setModel(lstProduceModel);
        lstIngredients.setModel(lstIngredientModel);
        ingredientList = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllIngredient();
        originalProduce = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllProduce();
        ArrayList<MadeIngredient> ingredients = Utilities.IntergratedProjectStaffApplication.JSPConnector.getAllProduceIngredient();
        
        for (MadeIngredient ingredient : ingredients) { //set ingredients to there produce
            for (MadeProduce produce : originalProduce) {
                 if (ingredient.getMadeProduceID() == produce.getMadeProduceID()) {
                     produce.getMadeIngredients().add(ingredient);
                     break;
                 }
            }
        }
        
        for (MadeProduce produce : originalProduce) { //copy list
            searchedProduce.add(produce);
            lstProduceModel.addElement(produce.getName());
        }
        
        
        setEventListeners();
        if (!searchedProduce.isEmpty())
            lstProduce.setSelectedIndex(0);
    }
    
    public void listLoad() {   
        lstProduceModel.clear();
        for (MadeProduce produce : searchedProduce) {
            lstProduceModel.addElement(produce.getName());
        }        
    }
    
    public void setEventListeners() {
        lstProduce.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!searchActivated) //this check only allows the action to take place when manually changed,
                    setCurrentProduceBoxs(); // not when the list repopulates calling the listener
                else
                    searchActivated = false;
                currentSelectionProduce = lstProduce.getSelectedIndex();
            }
        });
        
        lstIngredients.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                currentSelectionIngredient = lstIngredients.getSelectedIndex();
            }
        });
    }
    
    public void setCurrentProduceBoxs() {
        currentProduce = searchedProduce.get(lstProduce.getSelectedIndex());
        txtName.setText(currentProduce.getName());
        txtAmount.setText(String.valueOf(currentProduce.getAmountMade()));
        originalIngredientSize = currentProduce.getMadeIngredients().size();
        lstIngredientModel.clear();
        newIngredients.clear();
        deleteIngredients.clear();
        for (MadeIngredient ingredient : currentProduce.getMadeIngredients()) {
            for (Ingredient ingredientModel : ingredientList) {
                if (ingredientModel.getIngredientID() == ingredient.getIngredientID()) {
                        lstIngredientModel.addElement(ingredient.getStockUsed() + " : " + ingredientModel.getName());
                    break;
                }
            }
        }
        
    }
    
    public void setCurrentProduce() {
        currentProduce.setName(txtName.getText());
        currentProduce.setAmountMade(Double.parseDouble(txtAmount.getText()));        
        
        for (MadeIngredient ingredient: newIngredients)
            currentProduce.getMadeIngredients().add(ingredient);
    }
    
    public void addIngredient(int ingredientID, double amount, String name) {
        MadeIngredient ingredient = new MadeIngredient(currentProduce.getMadeProduceID(), ingredientID, amount);
        newIngredients.add(ingredient);
        lstIngredientModel.addElement(amount + " : " +name);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddIngredient;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRemoveIngredient;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> lstIngredients;
    private javax.swing.JList<String> lstProduce;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearchName;
    // End of variables declaration//GEN-END:variables

}
